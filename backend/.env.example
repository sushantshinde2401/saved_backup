# Flask Configuration
FLASK_HOST=0.0.0.0
FLASK_PORT=5000
FLASK_DEBUG=True

# Google Drive API Configuration
GOOGLE_DRIVE_CREDENTIALS_FILE=credentials.json
GOOGLE_DRIVE_TOKEN_FILE=token.json
GOOGLE_DRIVE_SERVICE_ACCOUNT_FILE=service-account.json
GOOGLE_DRIVE_SCOPES=https://www.googleapis.com/auth/drive.file

# File Storage Configuration
UPLOAD_FOLDER=uploads
STATIC_FOLDER=static

# QR Code Configuration
QR_VERSION=1
QR_BOX_SIZE=10
QR_BORDER=4

# Security Configuration
MAX_FILE_SIZE=50000000  # 50MB in bytes
ALLOWED_EXTENSIONS=pdf,jpg,jpeg,png,doc,docx

# Application Configuration
APP_NAME=Certificate Management System
BASE_URL=http://localhost:5000

# PostgreSQL Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=candidate_db
DB_USER=postgres
DB_PASSWORD=your_password_here
DB_SSL_MODE=prefer
DB_CONNECTION_TIMEOUT=30

# OpenAI Configuration (Optional)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=1000
OPENAI_TEMPERATURE=0.1
ENABLE_CHATGPT_FILTERING=true

# ============================================================================
# IMPORTANT: Google Drive API Setup Instructions
# ============================================================================
# 
# To set up Google Drive API integration, you need to create the following files:
# 
# 1. credentials.json (OAuth 2.0 - for development)
#    Download from Google Cloud Console > APIs & Services > Credentials
#    Structure should be:
#    {
#      "installed": {
#        "client_id": "your-client-id.googleusercontent.com",
#        "project_id": "your-project-id",
#        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
#        "token_uri": "https://oauth2.googleapis.com/token",
#        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
#        "client_secret": "your-client-secret",
#        "redirect_uris": ["http://localhost"]
#      }
#    }
# 
# 2. service-account.json (Service Account - for production)
#    Download from Google Cloud Console > APIs & Services > Credentials
#    Structure should be:
#    {
#      "type": "service_account",
#      "project_id": "your-project-id",
#      "private_key_id": "your-private-key-id",
#      "private_key": "-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n",
#      "client_email": "your-service-account@your-project.iam.gserviceaccount.com",
#      "client_id": "your-client-id",
#      "auth_uri": "https://accounts.google.com/o/oauth2/auth",
#      "token_uri": "https://oauth2.googleapis.com/token",
#      "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
#      "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project.iam.gserviceaccount.com"
#    }
# 
# 3. token.json (Auto-generated after first OAuth flow)
#    This file is created automatically when you first authenticate
#    Structure will be:
#    {
#      "token": "your-access-token",
#      "refresh_token": "your-refresh-token",
#      "token_uri": "https://oauth2.googleapis.com/token",
#      "client_id": "your-client-id.googleusercontent.com",
#      "client_secret": "your-client-secret",
#      "scopes": ["https://www.googleapis.com/auth/drive.file"]
#    }
# 
# Setup Steps:
# 1. Go to https://console.cloud.google.com/
# 2. Create a new project or select existing
# 3. Enable Google Drive API
# 4. Create OAuth 2.0 credentials (Desktop application)
# 5. Download credentials.json and place in backend folder
# 6. Run the application - it will guide you through OAuth flow
# 7. token.json will be created automatically
# 
# ============================================================================
